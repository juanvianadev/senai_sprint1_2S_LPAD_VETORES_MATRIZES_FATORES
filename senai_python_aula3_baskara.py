# -*- coding: utf-8 -*-
"""senai_python_aula3_BASKARA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bxI1R_-4wqGM5NO2g26BcBQBEoc9_2Ce
"""

import numpy as np
import matplotlib.pyplot as plt
import math as mt

import numpy as np
import matplotlib.pyplot as plt

a = float(input("Digite o valor de a: "))
b = float(input("Digite o valor de b: "))
c = float(input("Digite o valor de c: "))

def calculaDelta(a,b,c):
  resultadoDelta = b**2-4*a*c
  print(f"Delta: {resultadoDelta}")
  return resultadoDelta

def calculaBaskara(resultadoDelta,a,b):
  if resultadoDelta < 0:
    print("Não há raízes reais")
  elif resultadoDelta == 0:
    print("Há 1 raíz")
    x = (-b+(np.sqrt(resultadoDelta)))/(2*a)
    print(f"Raiz: {x}")
    return x
  elif resultadoDelta > 0:
    print("Há 2 raíz")
    x1 = (-b+np.sqrt(resultadoDelta))/(2*a)
    x2 = (-b-np.sqrt(resultadoDelta))/(2*a)
    print(f"Raiz +: {x1}, Raiz -: {x2}")
    return x1,x2

def calculVertice(resultadoDelta,a,b):
  #x = -b/(2*a)
  #y = -resultadoDelta/(4*a)
  x = np.arange(-50, 60, 1, dtype=int)
  y=a*x**2+b*x+c
  print(f"Vertice X: {x}, Vertice Y:{y}")
  return x,y

print("...")
resultadoDelta = calculaDelta(a,b,c)
calculaBaskara(resultadoDelta,a,b)
calculVertice(resultadoDelta,a,b)
x, y = calculVertice(resultadoDelta,a,b)

plt.plot(x,y)
plt.xlabel("x")
plt.ylabel("y")
plt.title("Função Quadratica")
plt.show()

fsin = np.sin(np.linspace(0,360,360) * np.pi/180.)
x = np.linspace(0,360,360)

plt.figure().set_figheight(2,3)
plt.plot(x,fsin)
plt.xlabel("x", fontsize=15)
plt.ylabel("sin(x)", fontsize=15)
plt.title("Função Seno")
plt.legend(['f(x)=sin(x)'])
plt.show()

fsin = np.sin(np.linspace(0,360,360) * np.pi/180) + 2
x = np.linspace(0,360,360)

plt.figure().set_figheight(2,3)
plt.plot(x,fsin)
plt.xlabel("x", fontsize=15)
plt.ylabel("sin(x)", fontsize=15)
plt.title("Função Seno")
plt.legend(['f(x)=sin(x) + 2'])
plt.show()